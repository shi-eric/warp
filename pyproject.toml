# SPDX-FileCopyrightText: Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["setuptools>=75.3.2", "build", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "warp-lang"
requires-python = ">=3.8" # 3.9 recommended
authors = [{ name = "NVIDIA Corporation", email = "warp-python@nvidia.com" }]
description = "A Python framework for high-performance simulation and graphics programming"
license = { text = "Apache-2.0" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",       # EOL on 2024-10-07
    "Programming Language :: Python :: 3.9",       # EOL scheduled for 2025-10
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
    "Environment :: GPU :: NVIDIA CUDA",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
]
dependencies = ["numpy"]
dynamic = ["version", "readme"]

[project.urls]
Homepage = "https://developer.nvidia.com/warp-python"
Documentation = "https://nvidia.github.io/warp"
Repository = "https://github.com/NVIDIA/warp"
Issues = "https://github.com/NVIDIA/warp/issues"
Changelog = "https://github.com/NVIDIA/warp/blob/main/CHANGELOG.md"

[project.optional-dependencies]
docs = [
    'nvidia-sphinx-theme; python_version >= "3.9"',
    "sphinx-copybutton",
    "pre-commit",
    "myst_parser",
]
benchmark = [
    "usd-core>=25.5 ; platform_machine != 'aarch64' and python_version < '3.14'",
    "usd-exchange>=2.1.0a3 ; python_full_version >= '3.10' and platform_machine == 'aarch64'",
]
examples = [
    "blosc>=1.11.1",
    "matplotlib>=3.7.5",
    "pillow>=10.4.0",
    "psutil>=7.1.0",
    "pyglet>=2.1.9",
    "usd-core>=25.5 ; platform_machine != 'aarch64' and python_version < '3.14'",
    "usd-exchange>=2.1.0a3 ; python_full_version >= '3.10' and platform_machine == 'aarch64'",
]
torch-cu12 = [
    "warp-lang[examples]",
    'torch>=2.7.0; python_version >= "3.9"',
]
dev = [
    "warp-lang[examples]",
    "warp-lang[docs]",
    "nvtx",
    "coverage[toml]",
]

[tool.setuptools.packages.find]
include = ["warp*"]

[tool.setuptools.dynamic]
version = { file = ["VERSION.md"] }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 120
indent-width = 4
extend-exclude = [
    "notebooks",
    "warp/_src/thirdparty/appdirs.py",
    "warp/_src/thirdparty/dlpack.py",
    "tools",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "I",   # isort
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "NPY", # NumPy-specific rules
    "PLC", # pylint convention
    "PLE", # pylint error
    "PLW", # pylint warning
    "UP",  # pyupgrade
    "RUF",
]
ignore = [
    "E501",    # Many lines are over 120 characters already
    "E741",    # Warp often uses l as a variable name
    "F403",    # Allow wildcard imports
    "F405",    # Related to use of wildcard imports
    "F811",    # Warp often uses overloads
    "E721",    # Warp often uses == in float and int type comparisons
    "PLW0603", # Allow assignments to global variables
    "UP018",   # Warp kernels often use float(val) and int(val)
    "RUF046",  # Warp kernels often use int(val)
]
exclude = ["warp/__init__.pyi"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "PLC0414"]
"warp/*.py" = ["PLC0414"]
"warp/tests/*.py" = ["F841"]
"asv/benchmarks/**.py" = ["RUF012"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.coverage.run]
source = ["warp", "warp.render"]
disable_warnings = [
    "module-not-measured",
    "module-not-imported",
    "no-data-collected",
    "couldnt-parse",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@wp",
    "@warp",
    "if 0:",
    "if __name__ == .__main__.:",
]
omit = [
    "*/warp/_src/thirdparty/*",
    "*/warp/examples/*",
    "*/warp/tests/*",
    "*/warp/_src/fem/*",
    "appdirs.py",
    "render_opengl.py",
    "build_dll.py",
    "config.py",
    "__init__.pyi",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.uv.sources]
torch = [{ index = "pytorch-cu129", extra = "torch-cu12" }]

[[tool.uv.index]]
name = "pytorch-cu129"
url = "https://download.pytorch.org/whl/cu129"
explicit = true

[tool.typos]
files.extend-exclude = ["/tools/packman", "/tools/repoman", "/PUBLICATIONS.md", "/licenses", "/warp/native/nanovdb", "*.svg", "*.usda"]

[tool.typos.default]
extend-ignore-re = [
    # MSVC compiler flags like /Fo, /Fe, /Fd, etc.
    "/F[oedpircaOAu]"
]

[tool.typos.default.extend-words]
arange = "arange"
commun = "commun"
dout = "dout"
iy = "iy"
nd = "nd"

[tool.typos.default.extend-identifiers]
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK_OPTIN = "CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK_OPTIN"
ba = "ba"
